{
  "collections": [
    {
      "name": "React basics",
      "id": 1
    },
    {
      "name": "GIT",
      "id": 2
    },
    {
      "name": "Internet",
      "id": 3
    },
    {
      "name": "Node",
      "id": 4
    },
    {
      "name": "HTML",
      "id": 5
    },
    {
      "name": "CSS",
      "id": 6
    },
    {
      "name": "Algorithms",
      "id": 7
    },
    {
      "name": "JavaScript",
      "id": 8
    },
    {
      "name": "Server",
      "id": 9
    },
    {
      "name": "React router",
      "id": 10
    },
    {
      "name": "Python",
      "id": 11
    }
  ],
  "cards": [
    {
      "question": "Which hook gives us the ability to programmatically navigate the user to a new page in our application?",
      "answer": "useHistory\nor in newer versions of react useNavigate",
      "collectionId": "1",
      "id": 1,
      "needsReview": false,
      "lastReviewTime": 1686887809530,
      "isArchived": false
    },
    {
      "question": "____ is the process of handling all the routing logic with JavaScript, without making any additional GET requests for some new HTML document.",
      "answer": "single page application",
      "collectionId": "1",
      "id": 2,
      "needsReview": false,
      "lastReviewTime": 1686888043035,
      "isArchived": false
    },
    {
      "question": "What does the <Switch> React Router component do?",
      "answer": "Renders the first child <Route> or <Redirect> that matches the current location",
      "collectionId": "1",
      "id": 3,
      "needsReview": false,
      "lastReviewTime": 1686887735300
    },
    {
      "question": "What does the <Link> React Router component do?",
      "answer": "Provides declarative, accessible navigation ",
      "collectionId": "1",
      "id": 4,
      "needsReview": false,
      "lastReviewTime": 1686888011287
    },
    {
      "question": "What does the <Route> React Router component do?",
      "answer": "Renders a component when its path matches the current URL",
      "collectionId": "1",
      "id": 5,
      "needsReview": false,
      "lastReviewTime": 1686887911855
    },
    {
      "question": "What is server side routing vs client side routing?",
      "answer": "Server side happens when a route requests a new page from the server. Client side when it's handled by the JavaScript already loaded on the page",
      "collectionId": "1",
      "id": 6,
      "needsReview": false,
      "lastReviewTime": 1686887979159
    },
    {
      "question": "The ____ component's responsibility is to render a component when its path matches the current URL.",
      "answer": "<Route>",
      "collectionId": "1",
      "id": 7,
      "needsReview": false,
      "lastReviewTime": 1686887821368
    },
    {
      "question": "The ____ hook returns an object of key/value pairs of URL parameters.",
      "answer": "useParams",
      "collectionId": "1",
      "id": 8,
      "needsReview": false,
      "lastReviewTime": 1686888036164
    },
    {
      "question": "How does useParams let you access dynamic data from the URL?",
      "answer": "/dogs/:id\n\nconst parms = useParams()\n{params.id}",
      "collectionId": "1",
      "id": 9,
      "needsReview": false,
      "lastReviewTime": 1686887935152
    },
    {
      "question": "We use ____ to change the browser's URL and show the user a new page in our application without making the user click on a link.",
      "answer": "Programmatic Navigation ",
      "collectionId": "1",
      "id": 10,
      "needsReview": false,
      "lastReviewTime": 1686887983086
    },
    {
      "question": "What are the benefits of client-side routing? (3 things)",
      "answer": "1. Programmatic navigation\n2. Speed when navigating\n3. Conditionally rendering components based on URL",
      "collectionId": "1",
      "id": 11,
      "needsReview": false,
      "lastReviewTime": 1686887927392
    },
    {
      "question": "What are two ways to export a <Card> component?",
      "answer": "1. export default Card\n2. export default function Card(...",
      "collectionId": "1",
      "id": 12,
      "needsReview": false,
      "lastReviewTime": 1686887652652
    },
    {
      "question": "How do you import a <Card> component",
      "answer": "import Card from './Card';",
      "collectionId": "1",
      "id": 13,
      "needsReview": false,
      "lastReviewTime": 1686888016927
    },
    {
      "question": "What does a component need to have at a minimum?",
      "answer": "function Card(){\n  return (<div>Hi</div>);\n}",
      "collectionId": "1",
      "id": 14,
      "needsReview": false,
      "lastReviewTime": 1686887957090
    },
    {
      "question": "A React component is a function that takes in ____ and returns ____",
      "answer": "1. props\n2. jsx",
      "collectionId": "1",
      "id": 15,
      "needsReview": false,
      "lastReviewTime": 1686887756374
    },
    {
      "question": "A React function component must start with a capital letter?",
      "answer": "True",
      "collectionId": "1",
      "id": 16,
      "needsReview": false,
      "lastReviewTime": 1686887952259
    },
    {
      "question": "When should you use the key prop?",
      "answer": "When rendering an array of components. \nThe key prop is a special prop that React uses to help optimize performance when rendering arrays of components.",
      "collectionId": "1",
      "id": 17,
      "needsReview": false,
      "lastReviewTime": 1686887656652
    },
    {
      "question": "What is JSX?",
      "answer": "Valid JavaScript syntax. JavaScript XML",
      "collectionId": "1",
      "id": 18,
      "needsReview": false,
      "lastReviewTime": 1686887680381
    },
    {
      "question": "Is this a valid React component function App() {\n  return (\n    <Article />\n    <Comment />\n  );\n}",
      "answer": "False, you can only return one top level element. Otherwise you need to use a fragment <> </>",
      "collectionId": "1",
      "id": 19,
      "needsReview": false,
      "lastReviewTime": 1686887943534
    },
    {
      "question": "What does GIT stand for?",
      "answer": "Global Information Tracker",
      "collectionId": "2",
      "id": 20,
      "needsReview": false,
      "lastReviewTime": 1686889641918
    },
    {
      "question": "How do you push your code to the remote origin?",
      "answer": "git push -u origin main",
      "collectionId": "2",
      "id": 21,
      "needsReview": false,
      "lastReviewTime": 1686889641407
    },
    {
      "question": "How do you show a log of commits (bonus single line output per commit)?",
      "answer": "git log --oneline",
      "collectionId": "2",
      "id": 22,
      "needsReview": false,
      "lastReviewTime": 1686889640932
    },
    {
      "question": "What does the -u do in this command:\ngit push -u origin main",
      "answer": "Short for \"--set-upstream\" saves the remote repository and establishes tracking relationship",
      "collectionId": "2",
      "id": 23,
      "needsReview": false,
      "lastReviewTime": 1686889642449
    },
    {
      "question": "Fill in the blank on this description of the internet:\nPhysical layer -> ____ -> network layer -> transport layer -> session layer -> presentation layer -> Application layer",
      "answer": "Data layer",
      "collectionId": "3",
      "id": 24,
      "needsReview": true
    },
    {
      "question": "Physical layer -> data layer -> network layer -> ____-> session layer -> presentation layer -> Application layer",
      "answer": "Transport layer",
      "collectionId": "3",
      "id": 25,
      "needsReview": true,
      "lastReviewTime": 1686105258520
    },
    {
      "question": "What is declarative code?",
      "answer": "Describes what a program should accomplish (or what the end result should be)\nLeaves the determination of how to get to the end result up to the program",
      "collectionId": "1",
      "id": 26,
      "needsReview": false,
      "lastReviewTime": 1686887824177
    },
    {
      "question": "What do you call code that describes what a program should accomplish?",
      "answer": "Declarative",
      "collectionId": "1",
      "id": 27,
      "needsReview": false,
      "lastReviewTime": 1686887760058
    },
    {
      "question": "What do you call code that describes the explicit steps or actions to take?",
      "answer": "Imperative",
      "collectionId": "1",
      "id": 28,
      "needsReview": false,
      "lastReviewTime": 1686887806131
    },
    {
      "question": "How do you download all packages in package.json?",
      "answer": "npm install",
      "collectionId": "4",
      "id": 29,
      "needsReview": false,
      "lastReviewTime": 1686105193736
    },
    {
      "question": "____ is a package manager for JS that works via the command line to install packages of pre-existing code",
      "answer": "npm",
      "collectionId": "4",
      "id": 30,
      "needsReview": true,
      "lastReviewTime": 1685417354828
    },
    {
      "question": "Why is state useful in React?",
      "answer": "Change data, without reloading the page.",
      "collectionId": "1",
      "id": 31,
      "needsReview": false,
      "lastReviewTime": 1686887661262
    },
    {
      "question": "What happens if useEffect is called with only a single argument?\n\nuseEffect(() => {\n    console.log(\"render\");\n  });",
      "answer": "It will run the code on every render. You add a second [] argument to only show on first render",
      "collectionId": "1",
      "id": 32,
      "needsReview": false,
      "lastReviewTime": 1686887920175
    },
    {
      "question": "What React hook or function updates the state of a component?",
      "answer": "setState",
      "collectionId": "1",
      "id": 33,
      "needsReview": false,
      "lastReviewTime": 1686887889817
    },
    {
      "question": "What React hook or function runs code not triggered by a user event?",
      "answer": "useEffect",
      "collectionId": "1",
      "id": 34,
      "needsReview": false,
      "lastReviewTime": 1686887996228
    },
    {
      "question": "What React hook or function causes a component to re-render when called?",
      "answer": "setState",
      "collectionId": "1",
      "id": 35,
      "needsReview": false,
      "lastReviewTime": 1686887786589
    },
    {
      "question": "When we're using the useEffect hook, React gives us a way to control when the side effect function will run. What is it?",
      "answer": "By passing a second argument to useEffect of a dependencies array.",
      "collectionId": "1",
      "id": 36,
      "needsReview": false,
      "lastReviewTime": 1686887990262
    },
    {
      "question": "When and why should we use a cleanup function with useEffect?",
      "answer": "If we have a long running function that we want to stop running when our component is no longer the page.",
      "collectionId": "1",
      "id": 37,
      "needsReview": false,
      "lastReviewTime": 1686887668448
    },
    {
      "question": "How do you use a cleanup function with useEffect?",
      "answer": "You return the cleanup function in the first argument",
      "collectionId": "1",
      "id": 38,
      "needsReview": false,
      "lastReviewTime": 1686887803876
    },
    {
      "question": "A controlled component is a component that derives its input values from ____.",
      "answer": "state",
      "collectionId": "1",
      "id": 39,
      "needsReview": false,
      "lastReviewTime": 1686887892373
    },
    {
      "question": "Any time you want to make a change (adding, updating or deleting an item) to an array that's being stored in state, you first need to make a copy of the array using the spread operator.",
      "answer": "False - The important thing is that whatever value is passed to the setter function for that state is a new object rather than a reference to an existing object.",
      "collectionId": "1",
      "id": 40,
      "needsReview": false,
      "lastReviewTime": 1686887675772
    },
    {
      "question": "____ is data passed down to a child component from a parent component.",
      "answer": "props",
      "collectionId": "1",
      "id": 41,
      "needsReview": false,
      "lastReviewTime": 1686887992637
    },
    {
      "question": "____ is data held internally by React, accessible by a component",
      "answer": "state",
      "collectionId": "1",
      "id": 42,
      "needsReview": false,
      "lastReviewTime": 1686887790263
    },
    {
      "question": "Event listeners cannot be attached directly to our custom React components.",
      "answer": "True, can only be attached to DOM elements in JSX",
      "collectionId": "1",
      "id": 43,
      "needsReview": false,
      "lastReviewTime": 1686888008307
    },
    {
      "question": "For data in state, what's the best method/operator to add an item to an array",
      "answer": "spread operator",
      "collectionId": "1",
      "id": 44,
      "needsReview": false,
      "lastReviewTime": 1686887960342
    },
    {
      "question": "For data in state, what's the best method/operator to remove an item",
      "answer": "filter",
      "collectionId": "1",
      "id": 45,
      "needsReview": false,
      "lastReviewTime": 1686887886179
    },
    {
      "question": "For data in state, what's the best method/operator update an item in an array",
      "answer": "map",
      "collectionId": "1",
      "id": 46,
      "needsReview": false,
      "lastReviewTime": 1686887748445
    },
    {
      "question": "What does a controlled form require? (two things)",
      "answer": "1. Event handler to update state as user changes data\n2. Update info in the input to reflect state",
      "collectionId": "1",
      "id": 47,
      "needsReview": false,
      "lastReviewTime": 1686888023309
    },
    {
      "question": "React will always re-render a component when the setState function is called?",
      "answer": "False - React will only re-render a component when setState is called with a new object.",
      "collectionId": "1",
      "id": 48,
      "needsReview": false,
      "lastReviewTime": 1686887814436
    },
    {
      "question": "What does useState return when called?",
      "answer": "1. the current value for state\n2. a function to update that value",
      "collectionId": "1",
      "id": 49,
      "needsReview": false,
      "lastReviewTime": 1686887948910
    },
    {
      "question": "What is an algorithm?",
      "answer": "A well-defined procedure, or set of instructions, for accomplishing a specific task.",
      "collectionId": "7",
      "id": 50,
      "needsReview": false,
      "lastReviewTime": 1685417388521
    },
    {
      "question": "What is Big O Notation?",
      "answer": "Classify algorithms according to how their run time or space requirements grow as the input size grows.",
      "collectionId": "7",
      "id": 51,
      "needsReview": true,
      "lastReviewTime": 1685417392803
    },
    {
      "question": "What is time complexity of this:\nfunction logLetter(string) {\n  for (const letter of string) {\n    console.log(letter);\n  }\n}",
      "answer": "O(n)",
      "collectionId": "7",
      "id": 52,
      "needsReview": false,
      "lastReviewTime": 1685417398735
    },
    {
      "question": "What is the time complexity of function badCounting(array) {\n  let count = 0;\n  array.forEach((value, idx) => {\n    array.forEach((testValue, testIdx) => {\n      if (testIdx !== idx && value === testValue) {\n        count++;\n      }\n    });\n  });\n  return count / 2;\n}",
      "answer": "O(n^2)",
      "collectionId": "7",
      "id": 53,
      "needsReview": false,
      "lastReviewTime": 1685417384953
    },
    {
      "question": "What is the time complexity of function findIndexOfElement(array, target) {\n  return array.indexOf(target);\n}",
      "answer": "O(n)",
      "collectionId": "7",
      "id": 54,
      "needsReview": false,
      "lastReviewTime": 1686105371168
    },
    {
      "question": "What is included in an HTTP request? (three things)",
      "answer": "1. Headers\n2. HTTP verb\n3. URL",
      "collectionId": "9",
      "id": 55,
      "isArchived": false,
      "needsReview": true,
      "lastReviewTime": 1686888835350
    },
    {
      "question": "What is included in an HTTP response? (three things)",
      "answer": "1. Headers\n2. Status code\n3. Body",
      "collectionId": "9",
      "id": 56,
      "needsReview": true,
      "lastReviewTime": 1686888833258,
      "isArchived": false
    },
    {
      "question": "What function do you use to send an object of data in an HTTP request? ",
      "answer": "JSON.stringify(formData)",
      "collectionId": "9",
      "id": 57,
      "needsReview": false,
      "lastReviewTime": 1686888817372
    },
    {
      "question": "Say we have a sendUpdate function that we want to use to send an account update to one of our customers (customer1). sendUpdate takes two arguments: the message text and the date. Which of the following shows the correct invocation of apply?",
      "answer": "sendUpdate.apply(customer1, [message, date]);",
      "collectionId": "8",
      "id": 58,
      "needsReview": true,
      "lastReviewTime": 1686105461433
    },
    {
      "question": "The ____ method returns a copy of the function it is called on, in which the context is \"set\" to the object that's passed to it as an argument.",
      "answer": "bind",
      "collectionId": "8",
      "id": 59
    },
    {
      "question": "What argument/arguments do you need to pass to the call method?",
      "answer": "1. A context object\n2. A list of arguments to the function being called",
      "collectionId": "8",
      "id": 60
    },
    {
      "question": "When a JavaScript function is invoked, what is included in its execution context? (three things)",
      "answer": "1. The global execution context. \n2. The function execution context. \n3. The context of anything available via the scope chain. \n",
      "collectionId": "8",
      "id": 61,
      "needsReview": true,
      "lastReviewTime": 1686105213143
    },
    {
      "question": "Inside a function, we use the ____ keyword to access the function's context object and its properties. ",
      "answer": "this",
      "collectionId": "8",
      "id": 62,
      "needsReview": false,
      "lastReviewTime": 1686104962544
    },
    {
      "question": "A function defined using ____ syntax does not create its own context.",
      "answer": "arrow function",
      "collectionId": "8",
      "id": 63,
      "needsReview": false,
      "lastReviewTime": 1686105361446
    },
    {
      "question": "What is hoisting?",
      "answer": "Place a function call before the function definition",
      "collectionId": "8",
      "id": 64,
      "needsReview": false,
      "lastReviewTime": 1686105501513
    },
    {
      "question": "What is an anonymous function?",
      "answer": "const fn = function(){...\nor\nconst fn = () => {...",
      "collectionId": "8",
      "id": 65,
      "needsReview": true,
      "lastReviewTime": 1686105356163
    },
    {
      "question": "What is an IIFE?",
      "answer": "Immediately invoked function expression. ",
      "collectionId": "8",
      "id": 66,
      "needsReview": true,
      "lastReviewTime": 1686105549542
    },
    {
      "question": "How do you write an IIFE?",
      "answer": "(function(n) {return n })(2);",
      "collectionId": "8",
      "id": 67
    },
    {
      "question": "What is function level scope?",
      "answer": "Variables belonging to a function can only be accessed inside of it?",
      "collectionId": "8",
      "id": 68,
      "needsReview": false,
      "lastReviewTime": 1686105555210
    },
    {
      "question": "What is enclosure?",
      "answer": "When a function encloses the scope of a parent level function",
      "collectionId": "8",
      "id": 69
    },
    {
      "question": "A ____ function is a function passed into another function as an argument, which is then invoked inside the outer function",
      "answer": "callback",
      "collectionId": "8",
      "id": 70
    },
    {
      "question": "Is a function a first class object?",
      "answer": "True",
      "collectionId": "8",
      "id": 71
    },
    {
      "question": "How do you add a click event listener?",
      "answer": "el.addEventListener('click', callback);",
      "collectionId": "8",
      "id": 72
    },
    {
      "question": "The ____ event fires when your page's DOM is fully parsed from the underlying html.",
      "answer": "DOMContentLoaded",
      "collectionId": "8",
      "id": 73,
      "needsReview": false,
      "lastReviewTime": 1686105416803
    },
    {
      "question": "The ____ event fires when a form is submitted.",
      "answer": "submit",
      "collectionId": "8",
      "id": 74
    },
    {
      "question": "How do you change the behavior of a form submit with javascript?",
      "answer": "e.preventDefault()",
      "collectionId": "8",
      "id": 75
    },
    {
      "question": "Write a reduce function to total this array: const expenses = [25, 99, 1000, 350];",
      "answer": "expenses.reduce((acc, e) => acc + e, 0);",
      "collectionId": "8",
      "id": 76
    },
    {
      "question": "How do you iterate over the keys in an object?",
      "answer": "for...in",
      "collectionId": "8",
      "id": 77,
      "needsReview": false,
      "lastReviewTime": 1686105559354
    },
    {
      "question": "How do you iterate over the values of an object?",
      "answer": "for...of",
      "collectionId": "8",
      "id": 78,
      "needsReview": false,
      "lastReviewTime": 1686105533546
    },
    {
      "question": "What is the \"...\" syntax called?",
      "answer": "spread operator",
      "collectionId": "8",
      "id": 79,
      "needsReview": false,
      "lastReviewTime": 1686105429871
    },
    {
      "question": "Can the onClick event handler be attached to any component in React?",
      "answer": "No, must be a clickable element like a button or div",
      "collectionId": "1",
      "id": 80,
      "needsReview": false,
      "lastReviewTime": 1686887897020
    },
    {
      "question": "How can you update state with a sorted version of the data?",
      "answer": "You need to make a copy first, e.g. with slice or spread operator",
      "collectionId": "1",
      "id": 81,
      "needsReview": false,
      "lastReviewTime": 1686887901823
    },
    {
      "question": "How do you import react router?",
      "answer": "import { BrowserRouter } from \"react-router-dom\";",
      "collectionId": "10",
      "id": 82,
      "needsReview": false,
      "lastReviewTime": 1686888055472
    },
    {
      "question": "How do you setup an App component to use react router?",
      "answer": "<BrowserRouter>\n    <App />\n</BrowserRouter>",
      "collectionId": "10",
      "id": 83,
      "needsReview": false,
      "lastReviewTime": 1686888059380
    },
    {
      "question": "How do you setup routes in your App component?",
      "answer": "<Routes>\n    <Route path=\"/search\" element={<Search />} />\n    <Route path=\"/\" element={<Home />} />\n</Routes>",
      "collectionId": "10",
      "id": 84,
      "needsReview": false,
      "lastReviewTime": 1686888066298
    },
    {
      "question": "What are the 3 main props in the Route component?",
      "answer": "path, element, exact",
      "collectionId": "10",
      "id": 85,
      "needsReview": false,
      "lastReviewTime": 1686888110576
    },
    {
      "question": "What does \"exact\" prop do in the Route component?",
      "answer": "Disables partial matching",
      "collectionId": "10",
      "id": 86,
      "needsReview": false,
      "lastReviewTime": 1686888091033
    },
    {
      "question": "How do you add a link that knows whether it's active or not?",
      "answer": "<NavLink to=\"/\" end>\n  Home\n</NavLink>",
      "collectionId": "10",
      "id": 87,
      "needsReview": false,
      "lastReviewTime": 1686888100262
    },
    {
      "question": "How do you create a link?",
      "answer": "<Link to=\"/profile\">Profile</Link>",
      "collectionId": "10",
      "id": 88,
      "needsReview": false,
      "lastReviewTime": 1686888115357
    },
    {
      "question": "How do you get URL parameters with react router?",
      "answer": "First define the param in your Route \n<Route path=\"/collections/:id\" element={<CollectionDetail />} />\n\nThen access with useParams hook:\nconst params = useParams();\nconst param = params.id;",
      "collectionId": "10",
      "id": 89,
      "needsReview": false,
      "lastReviewTime": 1686888088400
    },
    {
      "question": "How do you navigate programmatically in react router?",
      "answer": "useHistory hook",
      "collectionId": "10",
      "id": 90,
      "needsReview": false,
      "lastReviewTime": 1686888117477,
      "isArchived": true
    },
    {
      "question": "How do you use the useHistory hook?",
      "answer": "let history = useHistory();\nhistory.push(\"/home\");",
      "collectionId": "10",
      "id": 91,
      "needsReview": false,
      "lastReviewTime": 1686888124073
    },
    {
      "question": "How do you use ReactDom?",
      "answer": "const root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n      <App />\n);",
      "collectionId": "1",
      "id": 92,
      "needsReview": false,
      "lastReviewTime": 1686887907754
    },
    {
      "question": "Can you nest <Route> components?",
      "answer": "Yes! And they get combined.",
      "collectionId": "10",
      "id": 93,
      "needsReview": false,
      "lastReviewTime": 1686888122311
    },
    {
      "question": "How do Routes or Switch work?",
      "answer": "Only choose the single best match, starting from the first <Route> in the list",
      "collectionId": "10",
      "id": 94,
      "needsReview": false,
      "lastReviewTime": 1686888062410
    },
    {
      "question": "How do you style active NavLink?",
      "answer": "Two ways:\n1. Has a built in active class \"active\"\n2. activeClassName=\"my-active-class\"\n3. Built in data\nclassName={({ isActive, isPending }) =>\n    isPending ? \"pending\" : isActive ? \"active\" : \"\"\n  }",
      "collectionId": "10",
      "id": 95,
      "needsReview": false,
      "lastReviewTime": 1686888077162
    },
    {
      "question": "Why won't this work for key and how to fix it?\n\nconst key = e.target.name;\nconst val = e.target.value;\nsetForm(form => ({...form, key: val}));",
      "answer": "It will try to use the string \"key\" as the key. To fix change to [key]: val",
      "collectionId": "1",
      "id": 96,
      "needsReview": false,
      "lastReviewTime": 1686887801435
    },
    {
      "question": "What are the 3 types of python errors?",
      "answer": "1. Syntax\n2. Logic\n3. Exceptions",
      "collectionId": "11",
      "id": 97
    },
    {
      "question": "How do you install from the Pipfile?",
      "answer": "pipenv install",
      "collectionId": "11",
      "id": 98
    },
    {
      "question": "How do you run a shell for the pipenv?",
      "answer": "pipenv shell",
      "collectionId": "11",
      "id": 99
    },
    {
      "question": "How do you run pytest?",
      "answer": "Two steps\n1. pipenv shell\n2. pytest",
      "collectionId": "11",
      "id": 100,
      "needsReview": true
    },
    {
      "question": "What keyword can you put in empty functions as placeholders?",
      "answer": "pass",
      "collectionId": "11",
      "id": 101
    },
    {
      "question": "What is an interpreter?",
      "answer": "Program that executes other programs. Python requires one to be run. ",
      "collectionId": "11",
      "id": 102
    },
    {
      "question": "What is unique about an exception error?",
      "answer": "It can be predicted and handled without causing a crash",
      "collectionId": "11",
      "id": 103
    },
    {
      "question": "How does Python define code blocks?",
      "answer": "By indentation level",
      "collectionId": "11",
      "id": 104
    },
    {
      "question": "What is 'ipdb'?",
      "answer": "A REPL",
      "collectionId": "11",
      "id": 105
    },
    {
      "question": "What is a REPL?",
      "answer": "Interactive programming environment.\nRead, Evaluate, Print, Loop",
      "collectionId": "11",
      "id": 106
    },
    {
      "question": "How do you use useNavigate hook?",
      "answer": "let navigate = useNavigate();\nnavigate(\"/page\");",
      "collectionId": "10",
      "id": 107,
      "needsReview": false,
      "lastReviewTime": 1686888104754
    },
    {
      "question": "",
      "answer": "",
      "collectionId": "9",
      "id": 108,
      "needsReview": true,
      "isArchived": true
    },
    {
      "question": "Which array methods return a copy?",
      "answer": "slice, map, filter",
      "collectionId": "8",
      "id": 109
    },
    {
      "question": "Which array methods modify the original array?",
      "answer": "sort, splice, push, pop, shift, unshift",
      "collectionId": "8",
      "id": 110
    },
    {
      "question": "How do you add an item to a set?",
      "answer": "set1 = set([1,2,3])\nset1.add(4)",
      "collectionId": "11",
      "id": 111
    },
    {
      "question": "Use list comprehension to double each number in this list: my_list = [1,2,3]",
      "answer": "[n*2 for n in my_list]",
      "collectionId": "11",
      "id": 112
    },
    {
      "question": "How do you sum an array in Python?",
      "answer": "Built in sum function: sum(my_array)",
      "collectionId": "11",
      "id": 113
    },
    {
      "question": "How do you find the maximum value in an array?",
      "answer": "max(my_array)",
      "collectionId": "11",
      "id": 114
    },
    {
      "question": "What is a class?",
      "answer": "Blueprint defining how to build an object",
      "collectionId": "11",
      "id": 115
    },
    {
      "question": "What is an instance?",
      "answer": "A new object based on a class",
      "collectionId": "11",
      "id": 116
    }
  ]
}
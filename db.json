{
  "collections": [
    {
      "name": "React basics",
      "id": 1
    },
    {
      "name": "GIT",
      "id": 2
    },
    {
      "name": "Internet",
      "id": 3
    },
    {
      "name": "Node",
      "id": 4
    }
  ],
  "cards": [
    {
      "question": "Which hook gives us the ability to programmatically navigate the user to a new page in our application?",
      "answer": "useHistory",
      "collectionId": "1",
      "id": 1,
      "needsReview": false,
      "lastReviewTime": 1682702419267
    },
    {
      "question": "____ is the process of handling all the routing logic with JavaScript, without making any additional GET requests for some new HTML document.",
      "answer": "single page application",
      "collectionId": "1",
      "id": 2,
      "needsReview": true,
      "lastReviewTime": 1682656532951
    },
    {
      "question": "What does the <Switch> React Router component do?",
      "answer": "Renders the first child <Route> or <Redirect> that matches the current location",
      "collectionId": "1",
      "id": 3,
      "needsReview": true,
      "lastReviewTime": 1682656533321
    },
    {
      "question": "What does the <Link> React Router component do?",
      "answer": "Provides declarative, accessible navigation ",
      "collectionId": "1",
      "id": 4,
      "needsReview": false,
      "lastReviewTime": 1682701612500
    },
    {
      "question": "What does the <Route> React Router component do?",
      "answer": "Renders a component when its path matches the current URL",
      "collectionId": "1",
      "id": 5,
      "needsReview": true,
      "lastReviewTime": 1682656534406
    },
    {
      "question": "What is server side routing vs client side routing?",
      "answer": "Server side happens when a route requests a new page from the server. Client side when it's handled by the JavaScript already loaded on the page",
      "collectionId": "1",
      "id": 6,
      "needsReview": true,
      "lastReviewTime": 1682656534704
    },
    {
      "question": "The ____ component's responsibility is to render a component when its path matches the current URL.",
      "answer": "<Route>",
      "collectionId": "1",
      "id": 7,
      "needsReview": true,
      "lastReviewTime": 1682656535005
    },
    {
      "question": "The ____ hook returns an object of key/value pairs of URL parameters.",
      "answer": "useParams",
      "collectionId": "1",
      "id": 8,
      "needsReview": true,
      "lastReviewTime": 1682656535302
    },
    {
      "question": "How does useParams let you access dynamic data from the URL?",
      "answer": "/dogs/:id",
      "collectionId": "1",
      "id": 9,
      "needsReview": true,
      "lastReviewTime": 1682656535585
    },
    {
      "question": "We use ____ to change the browser's URL and show the user a new page in our application without making the user click on a link.",
      "answer": "Programmatic Navigation ",
      "collectionId": "1",
      "id": 10,
      "needsReview": true,
      "lastReviewTime": 1682656535853
    },
    {
      "question": "What are the benefits of client-side routing? (3 things)",
      "answer": "1. Programmatic navigation\n2. Speed when navigating\n3. Conditionally rendering components based on URL",
      "collectionId": "1",
      "id": 11,
      "needsReview": true,
      "lastReviewTime": 1682656536123
    },
    {
      "question": "What are two ways to export a <Card> component?",
      "answer": "1. export default Card\n2. export default function Card(...",
      "collectionId": "1",
      "id": 12,
      "needsReview": false,
      "lastReviewTime": 1682701617881
    },
    {
      "question": "How do you import a <Card> component",
      "answer": "import Card from './Card';",
      "collectionId": "1",
      "id": 13,
      "needsReview": false,
      "lastReviewTime": 1682702448580
    },
    {
      "question": "What does a component need to have at a minimum?",
      "answer": "function Card(){\n  return (<div>Hi</div>);\n}",
      "collectionId": "1",
      "id": 14,
      "needsReview": false,
      "lastReviewTime": 1682702444043
    },
    {
      "question": "A React component is a function that takes in ____ and returns ____",
      "answer": "1. props\n2. jsx",
      "collectionId": "1",
      "id": 15,
      "needsReview": false,
      "lastReviewTime": 1682701576987
    },
    {
      "question": "A React function component must start with a capital letter?",
      "answer": "True",
      "collectionId": "1",
      "id": 16,
      "needsReview": false,
      "lastReviewTime": 1682702472144
    },
    {
      "question": "When should you use the key prop?",
      "answer": "When rendering an array of components. \nThe key prop is a special prop that React uses to help optimize performance when rendering arrays of components.",
      "collectionId": "1",
      "id": 17,
      "needsReview": true,
      "lastReviewTime": 1682656537720
    },
    {
      "question": "What is JSX?",
      "answer": "Valid JavaScript syntax. JavaScript XML",
      "collectionId": "1",
      "id": 18,
      "needsReview": false,
      "lastReviewTime": 1682701597093
    },
    {
      "question": "Is this a valid React component function App() {\n  return (\n    <Article />\n    <Comment />\n  );\n}",
      "answer": "False, you can only return one top level element. Otherwise you need to use a fragment <> </>",
      "collectionId": "1",
      "id": 19,
      "needsReview": true,
      "lastReviewTime": 1682656538255
    },
    {
      "question": "What does GIT stand for?",
      "answer": "Global Information Tracker",
      "collectionId": "2",
      "id": 20
    },
    {
      "question": "How do you push your code to the remote origin?",
      "answer": "git push -u origin main",
      "collectionId": "2",
      "id": 21
    },
    {
      "question": "How do you show a log of commits (bonus single line output per commit)?",
      "answer": "git log --oneline",
      "collectionId": "2",
      "id": 22
    },
    {
      "question": "What does the -u do in this command:\ngit push -u origin main",
      "answer": "saves the remote repository",
      "collectionId": "2",
      "id": 23
    },
    {
      "question": "Fill in the blank on this description of the internet:\nPhysical layer -> ____ -> network layer -> transport layer -> session layer -> presentation layer -> Application layer",
      "answer": "Data layer",
      "collectionId": "3",
      "id": 24,
      "needsReview": true
    },
    {
      "question": "Physical layer -> data layer -> network layer -> ____-> session layer -> presentation layer -> Application layer",
      "answer": "Transport layer",
      "collectionId": "3",
      "id": 25,
      "needsReview": false,
      "lastReviewTime": 1682702467291
    },
    {
      "question": "What is declarative code?",
      "answer": "Describes what a program should accomplish (or what the end result should be)\nLeaves the determination of how to get to the end result up to the program",
      "collectionId": "1",
      "id": 26,
      "needsReview": true,
      "lastReviewTime": 1682702435492
    },
    {
      "question": "What do you call code that describes what a program should accomplish?",
      "answer": "Declarative",
      "collectionId": "1",
      "id": 27,
      "needsReview": false,
      "lastReviewTime": 1682702476650
    },
    {
      "question": "What do you call code that describes the explicit steps or actions to take?",
      "answer": "Imperative",
      "collectionId": "1",
      "id": 28
    },
    {
      "question": "How do you download all packages in package.json?",
      "answer": "npm install",
      "collectionId": "4",
      "id": 29
    },
    {
      "question": "____ is a package manager for JS that works via the command line to install packages of pre-existing code",
      "answer": "npm",
      "collectionId": "4",
      "id": 30
    },
    {
      "question": "Why is state useful in React?",
      "answer": "Change data, without reloading the page.",
      "collectionId": "1",
      "id": 31
    },
    {
      "question": "What happens if useEffect is called with only a single argument?\n\nuseEffect(() => {\n    console.log(\"render\");\n  });",
      "answer": "It will run the code on every render. You add a second [] argument to only show on first render",
      "collectionId": "1",
      "id": 32,
      "needsReview": false,
      "lastReviewTime": 1682701567247
    },
    {
      "question": "What React hook or function updates the state of a component?",
      "answer": "setState",
      "collectionId": "1",
      "id": 33
    },
    {
      "question": "What React hook or function runs code not triggered by a user event?",
      "answer": "useEffect",
      "collectionId": "1",
      "id": 34
    },
    {
      "question": "What React hook or function causes a component to re-render when called?",
      "answer": "setState",
      "collectionId": "1",
      "id": 35,
      "needsReview": false,
      "lastReviewTime": 1682702320118
    },
    {
      "question": "When we're using the useEffect hook, React gives us a way to control when the side effect function will run. What is it?",
      "answer": "By passing a second argument to useEffect of a dependencies array.",
      "collectionId": "1",
      "id": 36
    },
    {
      "question": "When and why should we use a cleanup function with useEffect?",
      "answer": "If we have a long running function that we want to stop running when our component is no longer the page.",
      "collectionId": "1",
      "id": 37
    },
    {
      "question": "How do you use a cleanup function with useEffect?",
      "answer": "You return the cleanup function in the first argument",
      "collectionId": "1",
      "id": 38,
      "needsReview": false,
      "lastReviewTime": 1682702426080
    },
    {
      "question": "A controlled component is a component that derives its input values from ____.",
      "answer": "state",
      "collectionId": "1",
      "id": 39,
      "needsReview": false,
      "lastReviewTime": 1682702408788
    },
    {
      "question": "Any time you want to make a change (adding, updating or deleting an item) to an array that's being stored in state, you first need to make a copy of the array using the spread operator.",
      "answer": "False - The important thing is that whatever value is passed to the setter function for that state is a new object rather than a reference to an existing object.",
      "collectionId": "1",
      "id": 40
    },
    {
      "question": "____ is data passed down to a child component from a parent component.",
      "answer": "props",
      "collectionId": "1",
      "id": 41
    },
    {
      "question": "____ is data held internally by React, accessible by a component",
      "answer": "state",
      "collectionId": "1",
      "id": 42
    },
    {
      "question": "Event listeners cannot be attached directly to our custom React components.",
      "answer": "True, can only be attached to DOM elements in JSX",
      "collectionId": "1",
      "id": 43
    },
    {
      "question": "For data in state, what's the best method/operator to add an item to an array",
      "answer": "spread operator",
      "collectionId": "1",
      "id": 44
    },
    {
      "question": "For data in state, what's the best method/operator to remove an item",
      "answer": "filter",
      "collectionId": "1",
      "id": 45
    },
    {
      "question": "For data in state, what's the best method/operator update an item in an array",
      "answer": "map",
      "collectionId": "1",
      "id": 46
    },
    {
      "question": "What does a controlled form require? (two things)",
      "answer": "1. Event listener to update state as user changes data\n2. Update info in the input to reflect state",
      "collectionId": "1",
      "id": 47
    },
    {
      "question": "React will always re-render a component when the setState function is called?",
      "answer": "False - React will only re-render a component when setState is called with a new object.",
      "collectionId": "1",
      "id": 48,
      "needsReview": true,
      "lastReviewTime": 1682702484856
    },
    {
      "question": "What does useState return when called?",
      "answer": "1. the current value for state\n2. a function to update that value",
      "collectionId": "1",
      "id": 49
    }
  ]
}